name: Container

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
    IMAGE_NAME: pynucleus
    IMAGE_TAGS: latest ${{ github.sha }}
    TEST_IMAGE_TAG: ${{ github.sha }}
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
    REGISTRY_USER: ${{ github.actor }}
    REGISTRY_PASSWORD: ${{ github.token }}

jobs:

  container:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
    - name: Change image tags for PRs
      if: github.event_name == 'pull_request'
      run: |
        echo "IMAGE_TAGS=pr-${{ github.event.number }}" >> $GITHUB_ENV
        echo "TEST_IMAGE_TAG=pr-${{ github.event.number }}" >> $GITHUB_ENV

    - name: Check out
      if: always()
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # - uses: hadolint/hadolint-action@v3.1.0
    #   with:
    #     dockerfile: Dockerfile
    #     ignore: 'DL3008,DL3013'
    #     verbose: true

    - name: Build Image
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ env.IMAGE_TAGS }}
        containerfiles: |
          ./Dockerfile
        build-args: |
          PYNUCLEUS_BUILD_PARALLELISM=4

    - name: Push To GHCR
      if: github.event_name == 'pull_request'
      uses: redhat-actions/push-to-registry@v2
      id: push-pr
      with:
        image: ${{ steps.build_image.outputs.image }}
        tags: ${{ env.IMAGE_TAGS }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        extra-args: |
          --disable-content-trust

    - name: Run tests
      run: |
        podman run \
        -e MPIEXEC_FLAGS="--allow-run-as-root --oversubscribe" \
        --workdir /pynucleus \
        --rm \
        --entrypoint='["python3", "-m", "pytest", "--junit-xml", "test-results.xml"]' \
        ${{ steps.build_image.outputs.image }}:${{ env.TEST_IMAGE_TAG }}

    - name: Push To GHCR
      if: github.event_name == 'push'
      uses: redhat-actions/push-to-registry@v2
      id: push
      with:
        image: ${{ steps.build_image.outputs.image }}
        tags: ${{ steps.build_image.outputs.tags }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        extra-args: |
          --disable-content-trust

    - name: Echo outputs
      if: github.event_name == 'push'
      run: |
        echo "${{ toJSON(steps.push.outputs) }}"

  container-test:
    needs: container

    strategy:
      matrix:
        include:
          - runner: 'ubuntu-latest'

    name: Container test ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}

    steps:
    - name: Check out
      uses: actions/checkout@v4

    - name: Install podman-compose
      run: pip install podman-compose

    - name: Run container test
      run: podman-compose run quick-test
